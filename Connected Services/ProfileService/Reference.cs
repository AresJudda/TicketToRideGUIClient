//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TicketToRideGUI.ProfileService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/GameServices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TicketToRideGUI.ProfileService.Player))]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/GameServices")]
    [System.SerializableAttribute()]
    public partial class Player : TicketToRideGUI.ProfileService.User {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GamerKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GamerTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReportsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GamerKey {
            get {
                return this.GamerKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.GamerKeyField, value) != true)) {
                    this.GamerKeyField = value;
                    this.RaisePropertyChanged("GamerKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GamerTag {
            get {
                return this.GamerTagField;
            }
            set {
                if ((object.ReferenceEquals(this.GamerTagField, value) != true)) {
                    this.GamerTagField = value;
                    this.RaisePropertyChanged("GamerTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Reports {
            get {
                return this.ReportsField;
            }
            set {
                if ((this.ReportsField.Equals(value) != true)) {
                    this.ReportsField = value;
                    this.RaisePropertyChanged("Reports");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Stat", Namespace="http://schemas.datacontract.org/2004/07/GameServices")]
    [System.SerializableAttribute()]
    public partial class Stat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GamesPlayedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GamesWonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GamesPlayed {
            get {
                return this.GamesPlayedField;
            }
            set {
                if ((this.GamesPlayedField.Equals(value) != true)) {
                    this.GamesPlayedField = value;
                    this.RaisePropertyChanged("GamesPlayed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GamesWon {
            get {
                return this.GamesWonField;
            }
            set {
                if ((this.GamesWonField.Equals(value) != true)) {
                    this.GamesWonField = value;
                    this.RaisePropertyChanged("GamesWon");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProfileService.IProfile", CallbackContract=typeof(TicketToRideGUI.ProfileService.IProfileCallback))]
    public interface IProfile {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IProfile/GetDataPlayer")]
        void GetDataPlayer(string gamerKey);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IProfile/GetDataPlayer")]
        System.Threading.Tasks.Task GetDataPlayerAsync(string gamerKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProfileCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfile/ReceiveDataPlayer", ReplyAction="http://tempuri.org/IProfile/ReceiveDataPlayerResponse")]
        void ReceiveDataPlayer(TicketToRideGUI.ProfileService.Player player);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProfileChannel : TicketToRideGUI.ProfileService.IProfile, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProfileClient : System.ServiceModel.DuplexClientBase<TicketToRideGUI.ProfileService.IProfile>, TicketToRideGUI.ProfileService.IProfile {
        
        public ProfileClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ProfileClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ProfileClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void GetDataPlayer(string gamerKey) {
            base.Channel.GetDataPlayer(gamerKey);
        }
        
        public System.Threading.Tasks.Task GetDataPlayerAsync(string gamerKey) {
            return base.Channel.GetDataPlayerAsync(gamerKey);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProfileService.IStat", CallbackContract=typeof(TicketToRideGUI.ProfileService.IStatCallback))]
    public interface IStat {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStat/GetStatPlayer")]
        void GetStatPlayer(string gamerKey);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStat/GetStatPlayer")]
        System.Threading.Tasks.Task GetStatPlayerAsync(string gamerKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStatCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStat/ReceiveStatPlayer", ReplyAction="http://tempuri.org/IStat/ReceiveStatPlayerResponse")]
        void ReceiveStatPlayer(TicketToRideGUI.ProfileService.Stat statPlayer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStatChannel : TicketToRideGUI.ProfileService.IStat, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StatClient : System.ServiceModel.DuplexClientBase<TicketToRideGUI.ProfileService.IStat>, TicketToRideGUI.ProfileService.IStat {
        
        public StatClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public StatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public StatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public StatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public StatClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void GetStatPlayer(string gamerKey) {
            base.Channel.GetStatPlayer(gamerKey);
        }
        
        public System.Threading.Tasks.Task GetStatPlayerAsync(string gamerKey) {
            return base.Channel.GetStatPlayerAsync(gamerKey);
        }
    }
}
