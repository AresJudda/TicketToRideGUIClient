//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TicketToRideGUI.EmailManagementService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmailManagementService.IEmailManagement", CallbackContract=typeof(TicketToRideGUI.EmailManagementService.IEmailManagementCallback))]
    public interface IEmailManagement {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEmailManagement/SendPasswordResetEmail")]
        void SendPasswordResetEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEmailManagement/SendPasswordResetEmail")]
        System.Threading.Tasks.Task SendPasswordResetEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEmailManagement/ChangePassword")]
        void ChangePassword(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEmailManagement/ChangePassword")]
        System.Threading.Tasks.Task ChangePasswordAsync(string email, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailManagementCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailManagement/ReceiveConfirmationEmail", ReplyAction="http://tempuri.org/IEmailManagement/ReceiveConfirmationEmailResponse")]
        void ReceiveConfirmationEmail(bool confirm, string uniqueKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailManagement/ReceiveConfirmationChangePassword", ReplyAction="http://tempuri.org/IEmailManagement/ReceiveConfirmationChangePasswordResponse")]
        void ReceiveConfirmationChangePassword(bool confirm);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailManagementChannel : TicketToRideGUI.EmailManagementService.IEmailManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailManagementClient : System.ServiceModel.DuplexClientBase<TicketToRideGUI.EmailManagementService.IEmailManagement>, TicketToRideGUI.EmailManagementService.IEmailManagement {
        
        public EmailManagementClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public EmailManagementClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public EmailManagementClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public EmailManagementClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public EmailManagementClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SendPasswordResetEmail(string email) {
            base.Channel.SendPasswordResetEmail(email);
        }
        
        public System.Threading.Tasks.Task SendPasswordResetEmailAsync(string email) {
            return base.Channel.SendPasswordResetEmailAsync(email);
        }
        
        public void ChangePassword(string email, string password) {
            base.Channel.ChangePassword(email, password);
        }
        
        public System.Threading.Tasks.Task ChangePasswordAsync(string email, string password) {
            return base.Channel.ChangePasswordAsync(email, password);
        }
    }
}
